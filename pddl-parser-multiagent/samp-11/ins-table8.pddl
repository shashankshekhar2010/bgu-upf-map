;
;;	TableMover Domain
;
(define (problem table1_1) (:domain tablemover)
;
(:objects
	a1 a2 - agent
	r1x1 r1x2 r1x3 r2x1 r2x2 r2x3 r3x1 r3x2 r3x3 - room
	t1 t2 t3 t4 t5 t6 t7 t8 - table
)
;
(:init
	(in a1 r1x1)
	(in a2 r1x1)
	(inroom t1 r1x1)
	(inroom t2 r2x1)
	(inroom t3 r1x2)
	(inroom t4 r2x2)
	(inroom t5 r1x1)
	(inroom t6 r2x1)
	(inroom t7 r1x2)
	(inroom t8 r2x2)
	(available a1)
	(available a2)
	(connected r1x1 r1x2)
	(connected r1x2 r1x1)
	(connected r1x2 r1x3)
	(connected r1x3 r1x2)
	(connected r1x1 r2x1)
	(connected r2x1 r3x1)
	(connected r3x1 r2x1)
	(connected r2x1 r2x2)
	(connected r2x2 r2x1)
	(connected r1x2 r2x2)
	(connected r2x2 r1x2)
	(connected r2x1 r2x2)
	(connected r2x2 r2x1)
	(connected r2x3 r2x2)
	(connected r2x2 r2x3)
	(connected r3x2 r2x2)
	(connected r2x2 r3x2)
	(connected r2x3 r2x2)
	(connected r2x2 r2x3)
	(connected r2x3 r3x3)
	(connected r3x3 r2x3)
	(connected r2x3 r2x2)
	(connected r2x2 r2x3)
	(connected r3x3 r3x2)
	(connected r3x2 r3x3)	
	(intact t1)
	(intact t2)
	(intact t3)
	(intact t4)
	(intact t5)
	(intact t6)
	(intact t7)
	(intact t8)
	(has-charging-point r1x1)
	(has-charging-point r1x2)
	(has-charging-point r1x3)
	(has-charging-point r2x1)
	(has-charging-point r2x2)
	(has-charging-point r2x3)
	(has-charging-point r3x1)
	(has-charging-point r3x2)
	(has-charging-point r3x3)
)
;
(:goal 
	(and
		(inroom t1 r3x3)
		(inroom t2 r1x3)
		(inroom t3 r2x1)
		(inroom t4 r1x1)
		(inroom t5 r3x2)
		(inroom t6 r3x2)
		(inroom t7 r3x3)
		(inroom t8 r1x1)		
		(intact t1)
		(intact t2)
		(intact t3)
		(intact t4)
		(intact t5)
		(intact t6)
		(intact t7)
		(intact t8)
 	)
)
;
)
